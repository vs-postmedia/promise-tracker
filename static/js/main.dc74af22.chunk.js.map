{"version":3,"sources":["components/Aux/Aux.jsx","components/SummaryBox/SummaryBox.js","components/ResponsiveTable/ResponsiveTable.js","components/Layout/Layout.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","Component","ResponsiveTable","_Component","_inherits","_super","_createSuper","_classCallCheck","this","apply","arguments","_createClass","key","value","filter","row","id","pivotId","undefined","String","toLowerCase","includes","React","createElement","ReactTable","className","columns","Header","accessor","filterMethod","rowIncludes","Filter","onChange","event","target","style","alignItems","display","width","data","defaultPageSize","filterable","filterAll","showPageSizeOptions","showPaginationTop","showPaginationBottom","SubComponent","console","log","original","Layout","_this","_len","length","args","Array","_key","call","concat","state","_this2","Papa","parse","sheet","download","dynamicTyping","header","complete","results","setState","googleSheetURL","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc74af22.chunk.js","sourcesContent":["const Aux = (props) => { return props.children; };\n\nexport default Aux;","import React, { Component } from 'react';\nimport './SummaryBox.css';\n\n\nexport class SummaryBox extends Component {\n\tcomponentDidUpdate() {\n\t\t\n\t}\n\n\tcalculateStats(data) {\n\t\tlet stats = {\n\t\t\tnot_considered: 0,\n\t\t\tcomplete: 0,\n\t\t\tunder_review: 0,\n\t\t\twork_underway: 0\n\t\t}\n\n\t\tfor (let i = 0; i < data.length; ++i) {\n\n\t\t\tif (data[i].status === 'Complete') {\n\t\t\t\tstats.complete++;\n\t\t\t} else if (data[i].status === 'Not under consideration') {\n\t\t\t\tstats.not_considered++;\n\t\t\t} else if (data[i].status.trim() === 'Reviewing') {\n\t\t\t\tstats.under_review++;\n\t\t\t} else if (data[i].status === 'Work underway') {\n\t\t\t\tstats.work_underway++;\n\t\t\t}\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\trender() {\n\t\tconst stats = this.calculateStats(this.props.data);\n\n\t\treturn (\n\t\t\t<div className=\"summary-box\">\t\t\n\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num new\">{stats.complete}</p>\n\t\t\t\t\t\t<p className=\"label\">Complete</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num being-held\">{stats.under_review}</p>\n\t\t\t\t\t\t<p className=\"label\">Under <br/> review</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num under-control\">{stats.work_underway}</p>\n\t\t\t\t\t\t<p className=\"label\">Work <br/> Underway</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num out\">{stats.not_considered}</p>\n\t\t\t\t\t\t<p className=\"label\">Not under <br/> consideration</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SummaryBox;\n\n","import React, { Component } from 'react'\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n// CSS overrides\nimport './ResponsiveTable.css';\n\n\nexport class ResponsiveTable extends Component {\n\trowIncludes(filter, row) {\n\t\t// all from the drop down returns everything\n\t\tif (filter.value === 'all') {\n\t\t\treturn true;\n\t\t}\n\t\t// search for string anywhere in field\n\t\tconst id = filter.pivotId || filter.id\n\t\treturn row[id] !== undefined ? String(row[id].toLowerCase()).includes(filter.value.toLowerCase()) : true\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ReactTable\t\t\t\t\n\t\t\t\tclassName=\"-highlight\"\n\t\t\t\tcolumns={[\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Agency',\n\t\t\t\t\t\taccessor: 'Promise made',\n\t\t\t\t\t\tfilterMethod: this.rowIncludes,\n\t\t\t\t\t\tFilter: (filter => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tonChange={event => filter.onChange(event.target.value)}\n\t\t\t\t\t\t\t\t\tstyle={{ \n\t\t\t\t\t\t\t\t\t\talignItems: 'start',\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\twidth: \"50%\" \n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue={filter ? filter.value : \"all\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Provincial government\">Provincial government</option>\n\t\t\t\t\t\t\t\t\t<option value=\"City of Vancouver\">City of Vancouver</option>\n\t\t\t\t\t\t\t\t</select>\n                    \t\t)\n\t\t\t\t\t\t}),\n\t\t\t\t\t\twidth: 200\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Desciption',\n\t\t\t\t\t\taccessor: 'Government agency',\n\t\t\t\t\t\t// filterMethod: this.rowIncludes,\n\t\t\t\t\t\twidth: 200\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tHeader: 'Status',\n\t\t\t\t\t\taccessor: 'Promise status',\n\t\t\t\t\t\tfilterMethod: this.rowIncludes,\n\t\t\t\t\t\tFilter: (filter => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tonChange={event => filter.onChange(event.target.value)}\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\tvalue={filter ? filter.value : \"all\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Complete\">Complete</option>\n\t\t\t\t\t\t\t\t\t<option value=\"In progress\">In progress</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Not started\">Not started</option>\n\t\t\t\t\t\t\t\t</select>\n                    \t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t]}\n\t\t\t\tdata={this.props.data}\n\t\t\t\tdefaultPageSize={5}\n\t\t\t\tfilterable={true}\n\t\t\t\tfilterAll={true}\n\t\t\t\tshowPageSizeOptions={false}\n\t\t\t\tshowPaginationTop={false}\n\t\t\t\tshowPaginationBottom={true}\n\t\t\t\tSubComponent={row => {\n\t\t\t\t\tconsole.log(row.original)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='sub-row'>\n\t\t\t\t\t\t\t<p>{row.original['Promise description']}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t);\n\t}\n}\n\nexport default ResponsiveTable;\n","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Papa from 'papaparse';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport ResponsiveTable from '../ResponsiveTable/ResponsiveTable';\n\nexport class Layout extends Component {\n\tstate = {\n\t\tdata: []\n\t};\n\n\tcomponentDidMount() {\n\t\t// load data from Google sheet\n\t\tPapa.parse(this.props.sheet, {\n\t\t\tdownload: true,\n\t\t\tdynamicTyping: true,\n\t\t\theader: true,\n\t\t\tcomplete: results => {\n\t\t\t\tlet data = results.data;\n\n\t\t\t\tconsole.log(data)\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t{/* <SummaryBox data={this.state.data}></SummaryBox> */}\n\t\t\t\t<ResponsiveTable data={this.state.data}></ResponsiveTable>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default Layout;","import React from 'react';\nimport Layout from '../Layout/Layout';\nimport './App.css';\n\nconst googleSheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vTlmUsLWT2CmS-L-YSqxCElBqfA-5prxXY19ZflnFmGdnmJofP2xf2P83EfLqCcNVySsffG8WWQ6eGK/pub?gid=1886747853&single=true&output=csv';\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<h1>Govâ€™t promise tracker</h1>\n\t  \t\t<Layout sheet={googleSheetURL}></Layout>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}